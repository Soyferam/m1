// –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Telegram Bot —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π ZMEIFI Web App
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π node-telegram-bot-api –∏–ª–∏ telegraf

const TelegramBot = require('node-telegram-bot-api');

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const token = 'YOUR_BOT_TOKEN_HERE';
const bot = new TelegramBot(token, { polling: true });

// URL –≤–∞—à–µ–≥–æ Web App (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS)
const WEBAPP_URL = 'https://your-domain.com';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    
    bot.sendMessage(chatId, 
        'üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ZMEIFI!\n\n' +
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É:',
        {
            reply_markup: {
                inline_keyboard: [[
                    {
                        text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É',
                        web_app: { url: WEBAPP_URL }
                    }
                ]]
            }
        }
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    
    bot.sendMessage(chatId,
        'üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ ZMEIFI:\n\n' +
        'üéØ –¶–µ–ª—å –∏–≥—Ä—ã: –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–º–µ–π–∫–æ–π –∏ —Å–æ–±–∏—Ä–∞–π—Ç–µ –º–æ–Ω–µ—Ç—ã\n' +
        'üí∞ –í–∞–ª—é—Ç—ã: TON –∏ –∏–≥—Ä–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã\n' +
        'üé® –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è: –ü–æ–∫—É–ø–∞–π—Ç–µ —à–∞–ø–∫–∏ –∏ –æ–¥–µ–∂–¥—É\n' +
        '‚ö° –ú–Ω–æ–∂–∏—Ç–µ–ª–∏: X1-X5 –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥\n\n' +
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã!'
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App
bot.on('web_app_data', (msg) => {
    const chatId = msg.chat.id;
    const data = msg.web_app_data.data;
    
    try {
        const parsedData = JSON.parse(data);
        console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App:', parsedData);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        switch (parsedData.action) {
            case 'game_start':
                bot.sendMessage(chatId, `üéÆ –ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ú–Ω–æ–∂–∏—Ç–µ–ª—å: X${parsedData.multiplier}`);
                break;
                
            case 'purchase':
                bot.sendMessage(chatId, `üõí –ü–æ–∫—É–ø–∫–∞: ${parsedData.item_name}`);
                break;
                
            case 'currency_add':
                bot.sendMessage(chatId, `üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${parsedData.amount} TON`);
                break;
                
            default:
                bot.sendMessage(chatId, 'üì± –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query (–∫–Ω–æ–ø–∫–∏)
bot.on('callback_query', (callbackQuery) => {
    const action = callbackQuery.data;
    const msg = callbackQuery.message;
    const chatId = msg.chat.id;
    
    if (action === 'open_shop') {
        bot.sendMessage(chatId,
            'üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω –æ—Ç–∫—Ä—ã—Ç!\n\n' +
            '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Web App –¥–ª—è –ø–æ–∫—É–ø–æ–∫:',
            {
                reply_markup: {
                    inline_keyboard: [[
                        {
                            text: 'üõí –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
                            web_app: { url: WEBAPP_URL + '#shop' }
                        }
                    ]]
                }
            }
        );
    }
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    bot.answerCallbackQuery(callbackQuery.id);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.on('polling_start', () => {
    console.log('ü§ñ –ë–æ—Ç ZMEIFI –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...');
    console.log('üì± Web App URL:', WEBAPP_URL);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
    bot.stopPolling();
    process.exit(0);
});

// –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Web App
function sendDataToWebApp(chatId, data) {
    bot.sendMessage(chatId, 'üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...', {
        reply_markup: {
            inline_keyboard: [[
                {
                    text: 'üì± –û—Ç–∫—Ä—ã—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏',
                    web_app: { 
                        url: WEBAPP_URL + '?data=' + encodeURIComponent(JSON.stringify(data))
                    }
                }
            ]]
        }
    });
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
// sendDataToWebApp(chatId, {
//     action: 'update_balance',
//     balance: 1000,
//     currency: 'TON'
// });

module.exports = {
    bot,
    sendDataToWebApp,
    WEBAPP_URL
};
